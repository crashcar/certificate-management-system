# 定义组织机构实体
Organizations:
  - &CERTMANORDER
    Name: CERTMANORDER # 组织的名称
    ID: CERTMANORDERMSP # 组织的 MSPID
    MSPDir: crypto-config/ordererOrganizations/certmanorder.com/msp #组织的证书相对位置（生成的crypto-config目录)
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('CERTMANORDERMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('CERTMANORDERMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('CERTMANORDERMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('CERTMANORDERMSP.member')"

  - &CERTMAN
    Name: CERTMAN
    ID: CERTMANMSP
    MSPDir: crypto-config/peerOrganizations/certman.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('CERTMANMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('CERTMANMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('CERTMANMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('CERTMANMSP.member')"
    AnchorPeers: # 组织锚节点的配置
      - Host: peer0.certman.com
        Port: 7051

  - &CET
    Name: CET
    ID: CETMSP
    MSPDir: crypto-config/peerOrganizations/cet.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('CETMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('CETMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('CETMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('CETMSP.member')"
    AnchorPeers: # 组织锚节点的配置
      - Host: peer0.cet.com
        Port: 7051

  - &NCRE
    Name: NCRE
    ID: NCREMSP
    MSPDir: crypto-config/peerOrganizations/ncre.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('NCREMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('NCREMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('NCREMSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('NCREMSP.member')"
    AnchorPeers: # 组织锚节点的配置
      - Host: peer0.ncre.com
        Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
  # Channel capabilities apply to both the orderers and the peers and must be
  # supported by both.
  # Set the value of the capability to true to require it.
  Channel: &ChannelCapabilities
    # V2_0 capability ensures that orderers and peers behave according
    # to v2.0 channel capabilities. Orderers and peers from
    # prior releases would behave in an incompatible way, and are therefore
    # not able to participate in channels at v2.0 capability.
    # Prior to enabling V2.0 channel capabilities, ensure that all
    # orderers and peers on a channel are at v2.0.0 or later.
    V2_0: true
  # Orderer capabilities apply only to the orderers, and may be safely
  # used with prior release peers.
  # Set the value of the capability to true to require it.
  Orderer: &OrdererCapabilities
    # V2_0 orderer capability ensures that orderers behave according
    # to v2.0 orderer capabilities. Orderers from
    # prior releases would behave in an incompatible way, and are therefore
    # not able to participate in channels at v2.0 orderer capability.
    # Prior to enabling V2.0 orderer capabilities, ensure that all
    # orderers on channel are at v2.0.0 or later.
    V2_0: true
  # Application capabilities apply only to the peer network, and may be safely
  # used with prior release orderers.
  # Set the value of the capability to true to require it.
  Application: &ApplicationCapabilities
    # V2.5 for Application enables the new non-backwards compatible
    # features of fabric v2.5, namely the ability to purge private data.
    # Prior to enabling V2.5 application capabilities, ensure that all
    # peers on a channel are at v2.5.0 or later.
    V2_5: true


# 定义了排序服务的相关参数，这些参数将用于创建创世区块
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults
  # Batch Timeout: The amount of time to wait before creating a batch
  BatchTimeout: 2s
  # Batch Size: Controls the number of messages batched into a block
  BatchSize:
    # Max Message Count: The maximum number of messages to permit in a batch
    MaxMessageCount: 10
    # Absolute Max Bytes: The absolute maximum number of bytes allowed for
    # the serialized messages in a batch.
    AbsoluteMaxBytes: 99 MB
    # Preferred Max Bytes: The preferred maximum number of bytes allowed for
    # the serialized messages in a batch. A message larger than the preferred
    # max bytes will result in a batch larger than preferred max bytes.
    PreferredMaxBytes: 512 KB
  # Organizations is the list of orgs which are defined as participants on
  # the orderer side of the network
  Organizations:
  # Policies defines the set of policies at this level of the config tree
  # For Orderer policies, their canonical path is
  #   /Channel/Orderer/<PolicyName>
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"



# 定义Peer组织如何与应用程序通道交互的策略
# 默认策略：所有Peer组织都将能够读取数据并将数据写入账本
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults
  # Organizations is the list of orgs which are defined as participants on
  # the application side of the network
  Organizations:
  # Policies defines the set of policies at this level of the config tree
  # For Application policies, their canonical path is
  #   /Channel/Application/<PolicyName>
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
    LifecycleEndorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"
    Endorsement:
      Type: ImplicitMeta
      Rule: "MAJORITY Endorsement"
  Capabilities:
    <<: *ApplicationCapabilities



################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
  # Policies defines the set of policies at this level of the config tree
  # For Channel policies, their canonical path is
  #   /Channel/<PolicyName>
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
  # Capabilities describes the channel level capabilities, see the
  # dedicated Capabilities section elsewhere in this file for a full
  # description
  Capabilities:
    <<: *ChannelCapabilities

        

# 用来定义用于 configtxgen 工具的配置入口
# 将 Profile 参数（ TwoOrgsOrdererGenesis 或 TwoOrgsChannel ）指定为 configtxgen 工具的参数
Profiles:
  #  TwoOrgsOrdererGenesis配置文件用于创建系统通道创世块
  #  该配置文件创建一个名为SampleConsortium的联盟
  #  该联盟在configtx.yaml文件中包含两个Peer组织
  ThreeOrgsOrdererGenesis:
    <<: *ChannelDefaults
    Orderer:
      <<: *OrdererDefaults
      OrdererType: solo
      Addresses: # Orderer 的域名（用于连接）
        - orderer.certmanorder.com:7050
      Organizations:
        - *CERTMANORDER
      Capabilities: *OrdererCapabilities
    Consortiums:
      SampleConsortium:
        Organizations:
          - *CERTMAN
          - *CET
          - *NCRE
  
  # 使用TwoOrgsChannel配置文件创建应用程序通道
  ThreeOrgsChannel:
    <<: *ChannelDefaults
    Consortium: SampleConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *CERTMAN
        - *CET
        - *NCRE